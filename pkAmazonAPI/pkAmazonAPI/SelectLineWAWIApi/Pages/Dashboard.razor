@page "/dashboard"
@using Syncfusion.Blazor.Layouts
@using Syncfusion.Blazor.Buttons
@using SelectLineWAWIApi.Pages.Components

<div class="control-section" id="target">
    <div style="padding-right:10px;padding-bottom:10px;text-align: right;">
        <SfButton CssClass="e-btn e-primary" Content="Add Panel" @onclick="AddClick"></SfButton>
        <SfButton CssClass="e-btn e-primary" Content="Manueller Upload" @onclick="ManualUpload"></SfButton>
    </div>

    <SfDashboardLayout @ref="dashboardObject" Columns="3" AllowResizing="true">
        <DashboardLayoutPanels>
            <DashboardLayoutPanel Id="one" Content="@LogTerminalComponent" Column="0" Row="0">
                <HeaderTemplate>Log</HeaderTemplate>
            </DashboardLayoutPanel>
            <DashboardLayoutPanel Id="two" Content="@ActionsComponent" Row="1" Column="0" SizeX=1 SizeY=1>
                <HeaderTemplate>Aktionen</HeaderTemplate>
            </DashboardLayoutPanel>
            <DashboardLayoutPanel Id="three" Content="@BelegListComponent" Row="0" Column="1" SizeX=2 SizeY=2>
                <HeaderTemplate>Belege</HeaderTemplate>
            </DashboardLayoutPanel>
        </DashboardLayoutPanels>
    </SfDashboardLayout>
</div>

@code {
    SfDashboardLayout dashboardObject;
    public int panelCount = 4;

    public async Task AddClick(EventArgs args)
    {
        string ContentValue = this.panelCount.ToString();
        PanelModel panel = new PanelModel
                {
                    Id = this.panelCount.ToString() + "_layout",
                    SizeX = 1,
                    SizeY = 1,
                    Column = 0,
                    Row = 0,
                    Header = @<div class='text-align'> Panel @ContentValue </div>
        };
        await dashboardObject.AddPanelAsync(panel);
        this.panelCount = this.panelCount + 1;
    }

    public async Task ManualUpload(EventArgs args)
    {

    }

    RenderFragment LogTerminalComponent => builder => { builder.OpenComponent(0, typeof(LogTerminalComponent)); builder.CloseComponent(); };
    RenderFragment ActionsComponent => builder => { builder.OpenComponent(0, typeof(ActionsComponent)); builder.CloseComponent(); };
    RenderFragment BelegListComponent => builder => { builder.OpenComponent(0, typeof(BelegListComponent)); builder.CloseComponent(); };
}

<style>
    .e-dashboardlayout {
        padding: 10px;
    }

    .e-panel-header {
        padding: 10px;
        margin-bottom: 0;
        background-color: rgba(0, 0, 0, .03);
    }

    .panel-content {
        vertical-align: middle;
        font-size: 15px;
        font-size: 15px;
        font-weight: 500;
        color: rgba(0, 0, 0, 0.61);
        text-align: center;
    }

    .e-panel-content {
        height: calc(100% - 28px);
        width: 100%;
        display: block;
    }

    .e-panel .e-header-text {
        padding: 12px 0 12px 0;
    }

    .e-dashboardlayout.e-control .e-panel .e-panel-header {
        font-size: 15px;
        font-weight: 500;
        height: 37px;
        line-height: 30px;
        padding: 10px;
        vertical-align: middle;
        border-bottom: 0.5px solid #e3e3e3;
    }

    .mobile .e-control.e-lib.e-dashboardlayout.e-responsive {
        z-index: 0;
        overflow: scroll;
    }

    .e-control.e-lib.e-dashboardlayout.e-responsive {
        z-index: 0;
    }

    .bootstrap5 .e-dashboardlayout.e-control .e-panel .e-panel-header,
    .bootstrap5-dark .e-dashboardlayout.e-control .e-panel .e-panel-header {
        line-height: 20px;
    }
</style>