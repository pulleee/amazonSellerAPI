@page "/"
@using Newtonsoft.Json
@using SelectLineWAWIApiCore.Client.Pages.Components
@using SelectLineWAWIApiCore.Shared.Models
@using Syncfusion.Blazor.Inputs
@using Syncfusion.Blazor.Layouts
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.Popups
@using System.Text.Json
@using SelectLineWAWIApiCore.Client.Services
@inject LogService LogService

<div class="control-section" id="target">
    <div style="padding-right:10px;padding-bottom:10px;text-align: right;">
        <SfButton CssClass="e-btn e-primary" Content="Manueller Upload" @onclick="ShowFileUloadDialog"></SfButton>
    </div>

    <!-- Manual Report to Beleg Upload -->
    <SfDialog Target="#target" ShowCloseIcon="true" @bind-Visible="FileUploadVisibility" IsModal="true">
        <DialogTemplates>
            <Header>Manueller Upload</Header>
            <Content>
                <SfUploader ID="UploadFiles" AutoUpload="false" AllowedExtensions=".txt">
                    <UploaderAsyncSettings SaveUrl="https://localhost:7168/api/Beleg/UploadFiles"></UploaderAsyncSettings>
                    <UploaderEvents OnFailure="@OnFailureHandler" OnActionComplete="@OnActionCompleteHandler" Success="@OnSuccessHandler"></UploaderEvents>
                </SfUploader>
            </Content>
        </DialogTemplates>
    </SfDialog>

    <SfDashboardLayout @ref="dashboardObject" Columns="3" AllowResizing="true">
        <DashboardLayoutPanels>
            <DashboardLayoutPanel Id="Log" Content="@LogTerminalComponent" Column="0" Row="0">
                <HeaderTemplate>Log</HeaderTemplate>
            </DashboardLayoutPanel>
            <DashboardLayoutPanel Id="Action" Content="@ActionsComponent" Row="1" Column="0" SizeX=1 SizeY=1>
                <HeaderTemplate>Planung</HeaderTemplate>
            </DashboardLayoutPanel>
            <DashboardLayoutPanel Id="Grid" Content="@BelegListComponent" Row="0" Column="1" SizeX=2 SizeY=2>
                <HeaderTemplate>Belege</HeaderTemplate>
            </DashboardLayoutPanel>
        </DashboardLayoutPanels>
    </SfDashboardLayout>
</div>

@code {
    public bool FileUploadVisibility { get; set; } = false;

    SfDashboardLayout dashboardObject;    

    private void OnFailureHandler(FailureEventArgs args)
    {
        if (args.Response != null)
        {
            var responseText = args.Response.ResponseText;
            if (!string.IsNullOrWhiteSpace(responseText))
            {
                using var jsonDoc = JsonDocument.Parse(responseText);
                var jsonResponse = jsonDoc.RootElement;

                if (jsonResponse.TryGetProperty("success", out var successProp))
                {
                    var isSuccess = successProp.GetBoolean();

                    if (!isSuccess)
                    {
                        // File upload success
                        var message = jsonResponse.TryGetProperty("message", out var messageProp) ? messageProp.GetString() : "File uploaded successfully";

                        // TODO Show in Grid
                        LogService.AddLog(LogLevel.Warning, message);
                    }
                }
            }
        }
    }

    private void OnSuccessHandler(SuccessEventArgs args)
    {
        if (args.Response != null) 
        {
            var responseText = args.Response.ResponseText;
            if (!string.IsNullOrWhiteSpace(responseText))
            {
                using var jsonDoc = JsonDocument.Parse(responseText);
                var jsonResponse = jsonDoc.RootElement;

                if (jsonResponse.TryGetProperty("success", out var successProp))
                {
                    var isSuccess = successProp.GetBoolean();

                    if (isSuccess)
                    {
                        // File upload success
                        var message = jsonResponse.TryGetProperty("message", out var messageProp) ? messageProp.GetString() : "File uploaded successfully";

                        // TODO Show in Grid
                        LogService.AddLog(LogLevel.Info, message);
                    }
                }
            }
        }
    }

    private void OnActionCompleteHandler(ActionCompleteEventArgs args)
    {
        LogService.AddLog(LogLevel.Info, "Action completed");
    }

    public void ShowFileUloadDialog(EventArgs args)
    {
        FileUploadVisibility = true;
    }

    RenderFragment LogTerminalComponent => builder => { builder.OpenComponent(0, typeof(LogTerminalComponent)); builder.CloseComponent(); };
    RenderFragment ActionsComponent => builder => { builder.OpenComponent(0, typeof(ActionsComponent)); builder.CloseComponent(); };
    RenderFragment BelegListComponent => builder => { builder.OpenComponent(0, typeof(BelegListComponent)); builder.CloseComponent(); };    
}

<style>
    .e-dashboardlayout {
        padding: 10px;
    }

    .e-panel-header {
        padding: 10px;
        margin-bottom: 0;
        background-color: rgba(0, 0, 0, .03);
    }

    .panel-content {
        vertical-align: middle;
        font-size: 15px;
        font-size: 15px;
        font-weight: 500;
        color: rgba(0, 0, 0, 0.61);
        text-align: center;
    }

    .e-panel-content {
        height: calc(100% - 28px);
        width: 100%;
        display: block;
    }

    .e-panel .e-header-text {
        padding: 12px 0 12px 0;
    }

    .e-dashboardlayout.e-control .e-panel .e-panel-header {
        font-size: 15px;
        font-weight: 500;
        height: 37px;
        line-height: 30px;
        padding: 10px;
        vertical-align: middle;
        border-bottom: 0.5px solid #e3e3e3;
    }

    .mobile .e-control.e-lib.e-dashboardlayout.e-responsive {
        z-index: 0;
        overflow: scroll;
    }

    .e-control.e-lib.e-dashboardlayout.e-responsive {
        z-index: 0;
    }

    .bootstrap5 .e-dashboardlayout.e-control .e-panel .e-panel-header,
    .bootstrap5-dark .e-dashboardlayout.e-control .e-panel .e-panel-header {
        line-height: 20px;
    }
</style>